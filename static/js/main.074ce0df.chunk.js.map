{"version":3,"sources":["App.js","index.js"],"names":["points","x","y","App","React","useState","floatPoint","setFloatPoint","className","width","height","onMouseMove","e","target","point","node","transform","getAbsoluteTransform","copy","invert","pos","getStage","getPointerPosition","getRelativePointerPosition","updateFloatPoint","flatMap","name","stroke","strokeWidth","hitStrokeWidth","lineCap","map","p","index","radius","draggable","fill","opacity","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sQAWA,IAAMA,EAAS,CACb,CAAEC,EAAG,GAAIC,EAAG,KACZ,CAAED,EAAG,IAAKC,EAAG,KACb,CAAED,EAAG,IAAKC,EAAG,MAGA,SAASC,IACtB,MAAoCC,IAAMC,SAAS,MAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,CACEC,MAAO,IACPC,OAAQ,IACRF,UAAU,SACVG,YAZmB,SAACC,GACG,SAAvBA,EAAEC,OAAOL,WANU,SAACI,GACxB,IAAME,EAhBH,SAAoCC,GACzC,IAAMC,EAAYD,EAAKE,uBAAuBC,OAC9CF,EAAUG,SACV,IAAMC,EAAML,EAAKM,WAAWC,qBAC5B,OAAON,EAAUF,MAAMM,GAYPG,CAA2BX,EAAEC,OAAOQ,YAClDd,EAAcO,GAKZU,CAAiBZ,IAMjB,SAME,eAAC,IAAD,WACE,cAAC,IAAD,CACEZ,OAAQA,EAAOyB,SAAQ,SAACX,GAAD,MAAW,CAACA,EAAMb,EAAGa,EAAMZ,MAClDwB,KAAK,SACLC,OAAO,MACPC,YAAa,EACbC,eAAgB,EAChBC,QAAQ,UAET9B,EAAO+B,KAAI,SAACC,EAAGC,GAAJ,OACV,cAAC,IAAD,CAEEhC,EAAG+B,EAAE/B,EACLC,EAAG8B,EAAE9B,EACLgC,OAAQ,EACRC,WAAS,EACTC,KAAK,OALAH,MAQT,cAAC,IAAD,CAEEhC,EAAGK,EAAaA,EAAWL,EAAI,EAC/BC,EAAGI,EAAaA,EAAWJ,EAAI,EAC/BgC,OAAQ,EACRG,QAAS/B,EAAa,EAAI,EAC1B8B,KAAK,QALD,gBCrDhB,IAAME,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACvC,EAAD,MAEFmC,K","file":"static/js/main.074ce0df.chunk.js","sourcesContent":["import \"./styles.css\";\nimport React from \"react\";\nimport { Stage, Layer, Line, Circle } from \"react-konva\";\n\nexport function getRelativePointerPosition(node) {\n  const transform = node.getAbsoluteTransform().copy();\n  transform.invert();\n  const pos = node.getStage().getPointerPosition();\n  return transform.point(pos);\n}\n\nconst points = [\n  { x: 10, y: 100 },\n  { x: 300, y: 100 },\n  { x: 600, y: 100 }\n];\n\nexport default function App() {\n  const [floatPoint, setFloatPoint] = React.useState(null);\n  const updateFloatPoint = (e) => {\n    const point = getRelativePointerPosition(e.target.getStage());\n    setFloatPoint(point);\n  };\n\n  const onStateMouseMove = (e) => {\n    if (e.target.className === \"Line\") {\n      updateFloatPoint(e);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Stage\n        width={800}\n        height={400}\n        className=\"canvas\"\n        onMouseMove={onStateMouseMove}\n      >\n        <Layer>\n          <Line\n            points={points.flatMap((point) => [point.x, point.y])}\n            name=\"region\"\n            stroke=\"red\"\n            strokeWidth={2}\n            hitStrokeWidth={6}\n            lineCap=\"round\"\n          />\n          {points.map((p, index) => (\n            <Circle\n              key={index}\n              x={p.x}\n              y={p.y}\n              radius={3}\n              draggable\n              fill=\"red\"\n            />\n          ))}\n          <Circle\n            key=\"float\"\n            x={floatPoint ? floatPoint.x : 0}\n            y={floatPoint ? floatPoint.y : 0}\n            radius={6}\n            opacity={floatPoint ? 1 : 0}\n            fill=\"blue\"\n          />\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}